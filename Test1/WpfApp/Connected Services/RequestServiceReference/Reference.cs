//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp.RequestServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRequestList", Namespace="http://schemas.datacontract.org/2004/07/RequestWcfService")]
    [System.SerializableAttribute()]
    public partial class GetRequestList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable ReqTbleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable ReqTble {
            get {
                return this.ReqTbleField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqTbleField, value) != true)) {
                    this.ReqTbleField = value;
                    this.RaisePropertyChanged("ReqTble");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RequestServiceReference.IRequestService")]
    public interface IRequestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/CheckForRequests", ReplyAction="http://tempuri.org/IRequestService/CheckForRequestsResponse")]
        int CheckForRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/CheckForRequests", ReplyAction="http://tempuri.org/IRequestService/CheckForRequestsResponse")]
        System.Threading.Tasks.Task<int> CheckForRequestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/UpdateRequest", ReplyAction="http://tempuri.org/IRequestService/UpdateRequestResponse")]
        void UpdateRequest(int requestID, bool approve);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/UpdateRequest", ReplyAction="http://tempuri.org/IRequestService/UpdateRequestResponse")]
        System.Threading.Tasks.Task UpdateRequestAsync(int requestID, bool approve);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetInfo", ReplyAction="http://tempuri.org/IRequestService/GetInfoResponse")]
        WpfApp.RequestServiceReference.GetRequestList GetInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetInfo", ReplyAction="http://tempuri.org/IRequestService/GetInfoResponse")]
        System.Threading.Tasks.Task<WpfApp.RequestServiceReference.GetRequestList> GetInfoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestServiceChannel : WpfApp.RequestServiceReference.IRequestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestServiceClient : System.ServiceModel.ClientBase<WpfApp.RequestServiceReference.IRequestService>, WpfApp.RequestServiceReference.IRequestService {
        
        public RequestServiceClient() {
        }
        
        public RequestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CheckForRequests() {
            return base.Channel.CheckForRequests();
        }
        
        public System.Threading.Tasks.Task<int> CheckForRequestsAsync() {
            return base.Channel.CheckForRequestsAsync();
        }
        
        public void UpdateRequest(int requestID, bool approve) {
            base.Channel.UpdateRequest(requestID, approve);
        }
        
        public System.Threading.Tasks.Task UpdateRequestAsync(int requestID, bool approve) {
            return base.Channel.UpdateRequestAsync(requestID, approve);
        }
        
        public WpfApp.RequestServiceReference.GetRequestList GetInfo() {
            return base.Channel.GetInfo();
        }
        
        public System.Threading.Tasks.Task<WpfApp.RequestServiceReference.GetRequestList> GetInfoAsync() {
            return base.Channel.GetInfoAsync();
        }
    }
}
